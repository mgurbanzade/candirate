/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n  mutation HireApplication(\n    $id: Int!\n    $redirectPath: String!\n    $positionId: Int!\n  ) {\n    hireApplication(\n      id: $id\n      redirectPath: $redirectPath\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n": types.HireApplicationDocument,
    "\n  mutation DeclineApplication(\n    $id: Int!\n    $declineApplicationInput: DeclineApplicationInput!\n    $positionId: Int!\n  ) {\n    declineApplication(\n      id: $id\n      declineApplicationInput: $declineApplicationInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n": types.DeclineApplicationDocument,
    "\n  mutation Login($loginUserInput: LoginUserInput!) {\n    login(loginUserInput: $loginUserInput) {\n      accessToken\n      refreshToken\n      user {\n        firstname\n        candidateId\n      }\n    }\n  }\n": types.LoginDocument,
    "\n  mutation Signup($signupUserInput: SignupUserInput!) {\n    signup(signupUserInput: $signupUserInput) {\n      user {\n        firstname\n      }\n    }\n  }\n": types.SignupDocument,
    "\n  mutation Logout {\n    logout {\n      success\n    }\n  }\n": types.LogoutDocument,
    "\n  mutation UpdateCandidate(\n    $candidateId: Int!\n    $updateCandidateInput: UpdateCandidateInput!\n  ) {\n    updateCandidate(\n      candidateId: $candidateId\n      updateCandidateInput: $updateCandidateInput\n    ) {\n      positionTitle\n      yearsOfExperience\n    }\n  }\n": types.UpdateCandidateDocument,
    "\n  mutation AddSkillToCandidate($candidateId: Int!, $skillName: String!) {\n    addSkillToCandidate(candidateId: $candidateId, skillName: $skillName) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n": types.AddSkillToCandidateDocument,
    "\n  mutation RemoveSkillFromCandidate($candidateId: Int!, $skillId: Int!) {\n    removeSkillFromCandidate(candidateId: $candidateId, skillId: $skillId) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n": types.RemoveSkillFromCandidateDocument,
    "\n  mutation UploadResume($candidateId: Int!, $resume: Upload!) {\n    uploadResume(candidateId: $candidateId, resume: $resume) {\n      __typename\n      resumeUrl\n    }\n  }\n": types.UploadResumeDocument,
    "\n  mutation RemoveResume($candidateId: Int!, $key: String!) {\n    removeResume(candidateId: $candidateId, key: $key) {\n      __typename\n      resumeUrl\n    }\n  }\n": types.RemoveResumeDocument,
    "\n  mutation CreateCompany($createCompanyInput: CreateCompanyInput!) {\n    createCompany(createCompanyInput: $createCompanyInput) {\n      id\n      name\n    }\n  }\n": types.CreateCompanyDocument,
    "\n  mutation CreateHiringStep(\n    $createHiringStepInput: CreateHiringStepInput!\n    $positionId: Int!\n  ) {\n    createHiringStep(\n      createHiringStepInput: $createHiringStepInput\n      positionId: $positionId\n    ) {\n      id\n      title\n    }\n  }\n": types.CreateHiringStepDocument,
    "\n  mutation UpdateHiringStep(\n    $id: Int!\n    $positionId: Int!\n    $updateHiringStepInput: UpdateHiringStepInput!\n  ) {\n    updateHiringStep(\n      id: $id\n      positionId: $positionId\n      updateHiringStepInput: $updateHiringStepInput\n    ) {\n      id\n      title\n    }\n  }\n": types.UpdateHiringStepDocument,
    "\n  mutation DeleteHiringStep($id: Int!, $positionId: Int!) {\n    deleteHiringStep(id: $id, positionId: $positionId) {\n      __typename\n    }\n  }\n": types.DeleteHiringStepDocument,
    "\n  mutation createInterview(\n    $createInterviewInput: CreateInterviewInput!\n    $applicationId: Int!\n    $positionId: Int!\n  ) {\n    createInterview(\n      createInterviewInput: $createInterviewInput\n      applicationId: $applicationId\n      positionId: $positionId\n    ) {\n      id\n      title\n      meetingLink\n      format\n      candidateId\n      positionId\n      startsAt\n      feedbackId\n    }\n  }\n": types.CreateInterviewDocument,
    "\n  mutation updateInterview(\n    $id: Int!\n    $updateInterviewInput: UpdateInterviewInput!\n    $positionId: Int!\n  ) {\n    updateInterview(\n      id: $id\n      updateInterviewInput: $updateInterviewInput\n      positionId: $positionId\n    ) {\n      id\n    }\n  }\n": types.UpdateInterviewDocument,
    "\n  mutation importQuestions(\n    $questionIds: [Int]!\n    $interviewId: Int!\n    $positionId: Int!\n  ) {\n    importQuestions(\n      questionIds: $questionIds\n      interviewId: $interviewId\n      positionId: $positionId\n    ) {\n      __typename\n    }\n  }\n": types.ImportQuestionsDocument,
    "\n  mutation declineInterview(\n    $id: Int!\n    $declineInterviewInput: DeclineInterviewInput!\n    $positionId: Int!\n  ) {\n    declineInterview(\n      id: $id\n      declineInterviewInput: $declineInterviewInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n": types.DeclineInterviewDocument,
    "\n  mutation SetNotificationRead($id: Int!, $recipientId: Int!) {\n    setNotificationRead(id: $id, recipientId: $recipientId) {\n      id\n      isRead\n    }\n  }\n": types.SetNotificationReadDocument,
    "\n  mutation CreatePosition($createPositionInput: CreatePositionInput!) {\n    createPosition(createPositionInput: $createPositionInput) {\n      title\n      description\n    }\n  }\n": types.CreatePositionDocument,
    "\n  mutation UpdatePosition(\n    $id: Int!\n    $updatePositionInput: UpdatePositionInput!\n  ) {\n    updatePosition(id: $id, updatePositionInput: $updatePositionInput) {\n      title\n      description\n    }\n  }\n": types.UpdatePositionDocument,
    "\n  mutation PublishPosition($id: Int!) {\n    publishPosition(id: $id) {\n      id\n      title\n      isPublished\n    }\n  }\n": types.PublishPositionDocument,
    "\n  mutation ApplyPosition($applyToPositionInput: ApplyToPositionInput!) {\n    applyToPosition(applyToPositionInput: $applyToPositionInput) {\n      timeslots {\n        id\n        startsAt\n        endsAt\n      }\n    }\n  }\n": types.ApplyPositionDocument,
    "\n  mutation AddSkillToPosition($id: Int!, $skillName: String!) {\n    addSkillToPosition(id: $id, skillName: $skillName) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n": types.AddSkillToPositionDocument,
    "\n  mutation RemoveSkillFromPosition($id: Int!, $skillId: Int!) {\n    removeSkillFromPosition(id: $id, skillId: $skillId) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n": types.RemoveSkillFromPositionDocument,
    "\n  mutation CreateQuestion($createQuestionInput: CreateQuestionInput!) {\n    createQuestion(createQuestionInput: $createQuestionInput) {\n      id\n    }\n  }\n": types.CreateQuestionDocument,
    "\n  mutation UpdateQuestion(\n    $id: Int!\n    $updateQuestionInput: UpdateQuestionInput!\n  ) {\n    updateQuestion(id: $id, updateQuestionInput: $updateQuestionInput) {\n      id\n      title\n      points\n    }\n  }\n": types.UpdateQuestionDocument,
    "\n  mutation RemoveQuestions($ids: [Int!]!) {\n    removeQuestions(ids: $ids) {\n      __typename\n    }\n  }\n": types.RemoveQuestionsDocument,
    "\n  mutation CreateTimeslot(\n    $createTimeslotInput: CreateTimeslotInput!\n    $candidateId: Int!\n    $applicationId: Int!\n  ) {\n    createTimeslot(\n      createTimeslotInput: $createTimeslotInput\n      candidateId: $candidateId\n      applicationId: $applicationId\n    ) {\n      id\n    }\n  }\n": types.CreateTimeslotDocument,
    "\n  mutation DeleteTimeslot($id: Int!, $candidateId: Int!) {\n    deleteTimeslot(id: $id, candidateId: $candidateId) {\n      __typename\n    }\n  }\n": types.DeleteTimeslotDocument,
    "\n  mutation UpdateUser($id: Int!, $updateUserInput: UpdateUserInput!) {\n    updateUser(id: $id, updateUserInput: $updateUserInput) {\n      __typename\n    }\n  }\n": types.UpdateUserDocument,
    "\n  query GetApplication($uuid: String!, $candidateId: Int) {\n    getApplication(uuid: $uuid, candidateId: $candidateId) {\n      id\n      uuid\n      status\n      declineMessage\n      currentStep {\n        id\n        title\n        order\n      }\n      upcomingInterview {\n        id\n        uuid\n        title\n        description\n        format\n        meetingLink\n        startsAt\n        endsAt\n        status\n        questions {\n          id\n          title\n          points\n        }\n      }\n      position {\n        id\n        uuid\n        title\n        salaryRateType\n        salaryRate\n        type\n        description\n        requiredSkills {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        hiringSteps {\n          id\n          title\n          order\n        }\n      }\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        userId\n        skills {\n          id\n          name\n        }\n        user {\n          firstname\n        }\n      }\n    }\n  }\n": types.GetApplicationDocument,
    "\n  query GetApplications($candidateId: Int!) {\n    getApplications(candidateId: $candidateId) {\n      id\n      uuid\n      status\n      position {\n        id\n        title\n        company {\n          id\n          name\n        }\n      }\n    }\n  }\n": types.GetApplicationsDocument,
    "\n  query Refresh {\n    refresh {\n      accessToken\n      expSeconds\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n": types.RefreshDocument,
    "\n  query GetCandidateProfile($uuid: String!) {\n    getCandidateProfile(uuid: $uuid) {\n      id\n      uuid\n      positionTitle\n      yearsOfExperience\n      salaryExpectation\n      salaryRateType\n      about\n      resumeUrl\n      skills {\n        id\n        name\n      }\n    }\n  }\n": types.GetCandidateProfileDocument,
    "\n  query GetProposalStatus($uuid: String!, $positionUuid: String!) {\n    getProposalStatus(uuid: $uuid, positionUuid: $positionUuid)\n  }\n": types.GetProposalStatusDocument,
    "\n  query SearchCompanies($query: String!) {\n    searchCompanies(query: $query) {\n      id\n      name\n    }\n  }\n": types.SearchCompaniesDocument,
    "\n  query GetInterviews($getInterviewsWhereInput: GetInterviewsWhereInput!) {\n    getInterviews(getInterviewsWhereInput: $getInterviewsWhereInput) {\n      id\n      uuid\n      title\n      description\n      meetingLink\n      startsAt\n      endsAt\n      status\n      hiringStepId\n      applicationId\n      positionId\n    }\n  }\n": types.GetInterviewsDocument,
    "\n  query GetInterview($uuid: String!) {\n    getInterview(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      format\n      meetingLink\n      startsAt\n      endsAt\n      status\n      candidateId\n      positionId\n      recruiterId\n      declineReason\n      declinedBy\n      hiringStepId\n      application {\n        uuid\n        candidate {\n          uuid\n        }\n      }\n      questions {\n        id\n        title\n        points\n      }\n    }\n  }\n": types.GetInterviewDocument,
    "\n  query GetNotifications($where: NotificationWhereUniqueInput!) {\n    getNotifications(where: $where) {\n      id\n      title\n      body\n      isRead\n      redirectPath\n      recipientId\n    }\n  }\n": types.GetNotificationsDocument,
    "\n  query getPosition($uuid: String!) {\n    getPosition(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      authorId\n      hiringSteps {\n        id\n        title\n        positionId\n      }\n      requiredSkills {\n        id\n        name\n      }\n      company {\n        id\n        name\n      }\n      suggestedCandidates {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n      }\n      applications {\n        id\n        uuid\n        status\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n        }\n        interviews {\n          uuid\n        }\n      }\n      applicationStatus\n    }\n  }\n": types.GetPositionDocument,
    "\n  query GetPositions($where: PositionWhereInput!) {\n    getAllPositions(where: $where) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      company {\n        id\n        name\n      }\n    }\n  }\n": types.GetPositionsDocument,
    "\n  query GetQuestions($recruiterId: Int!) {\n    getQuestions(recruiterId: $recruiterId) {\n      id\n      title\n      points\n    }\n  }\n": types.GetQuestionsDocument,
    "\n  query SearchSkills($query: String!) {\n    searchSkills(query: $query) {\n      id\n      name\n    }\n  }\n": types.SearchSkillsDocument,
    "\n  query getCalendarDayTimeslots($where: TimeslotsWhereInput!) {\n    getCalendarDayTimeslots(where: $where) {\n      id\n      startsAt\n      endsAt\n    }\n  }\n": types.GetCalendarDayTimeslotsDocument,
    "\n  query GetUsers {\n    getAllUsers {\n      firstname\n      type\n    }\n  }\n": types.GetUsersDocument,
    "\n  query GetCurrentUser {\n    getCurrentUser {\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n": types.GetCurrentUserDocument,
    "\n  query GetUserProfile {\n    getUserProfile {\n      id\n      firstname\n      middlename\n      lastname\n      email\n      type\n      candidateId\n      recruiterId\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        resumeUrl\n        skills {\n          id\n          name\n        }\n      }\n      recruiter {\n        id\n      }\n    }\n  }\n": types.GetUserProfileDocument,
};

export function graphql(source: "\n  mutation HireApplication(\n    $id: Int!\n    $redirectPath: String!\n    $positionId: Int!\n  ) {\n    hireApplication(\n      id: $id\n      redirectPath: $redirectPath\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"): (typeof documents)["\n  mutation HireApplication(\n    $id: Int!\n    $redirectPath: String!\n    $positionId: Int!\n  ) {\n    hireApplication(\n      id: $id\n      redirectPath: $redirectPath\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"];
export function graphql(source: "\n  mutation DeclineApplication(\n    $id: Int!\n    $declineApplicationInput: DeclineApplicationInput!\n    $positionId: Int!\n  ) {\n    declineApplication(\n      id: $id\n      declineApplicationInput: $declineApplicationInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"): (typeof documents)["\n  mutation DeclineApplication(\n    $id: Int!\n    $declineApplicationInput: DeclineApplicationInput!\n    $positionId: Int!\n  ) {\n    declineApplication(\n      id: $id\n      declineApplicationInput: $declineApplicationInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"];
export function graphql(source: "\n  mutation Login($loginUserInput: LoginUserInput!) {\n    login(loginUserInput: $loginUserInput) {\n      accessToken\n      refreshToken\n      user {\n        firstname\n        candidateId\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation Login($loginUserInput: LoginUserInput!) {\n    login(loginUserInput: $loginUserInput) {\n      accessToken\n      refreshToken\n      user {\n        firstname\n        candidateId\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation Signup($signupUserInput: SignupUserInput!) {\n    signup(signupUserInput: $signupUserInput) {\n      user {\n        firstname\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation Signup($signupUserInput: SignupUserInput!) {\n    signup(signupUserInput: $signupUserInput) {\n      user {\n        firstname\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation Logout {\n    logout {\n      success\n    }\n  }\n"): (typeof documents)["\n  mutation Logout {\n    logout {\n      success\n    }\n  }\n"];
export function graphql(source: "\n  mutation UpdateCandidate(\n    $candidateId: Int!\n    $updateCandidateInput: UpdateCandidateInput!\n  ) {\n    updateCandidate(\n      candidateId: $candidateId\n      updateCandidateInput: $updateCandidateInput\n    ) {\n      positionTitle\n      yearsOfExperience\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateCandidate(\n    $candidateId: Int!\n    $updateCandidateInput: UpdateCandidateInput!\n  ) {\n    updateCandidate(\n      candidateId: $candidateId\n      updateCandidateInput: $updateCandidateInput\n    ) {\n      positionTitle\n      yearsOfExperience\n    }\n  }\n"];
export function graphql(source: "\n  mutation AddSkillToCandidate($candidateId: Int!, $skillName: String!) {\n    addSkillToCandidate(candidateId: $candidateId, skillName: $skillName) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AddSkillToCandidate($candidateId: Int!, $skillName: String!) {\n    addSkillToCandidate(candidateId: $candidateId, skillName: $skillName) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation RemoveSkillFromCandidate($candidateId: Int!, $skillId: Int!) {\n    removeSkillFromCandidate(candidateId: $candidateId, skillId: $skillId) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation RemoveSkillFromCandidate($candidateId: Int!, $skillId: Int!) {\n    removeSkillFromCandidate(candidateId: $candidateId, skillId: $skillId) {\n      skills {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation UploadResume($candidateId: Int!, $resume: Upload!) {\n    uploadResume(candidateId: $candidateId, resume: $resume) {\n      __typename\n      resumeUrl\n    }\n  }\n"): (typeof documents)["\n  mutation UploadResume($candidateId: Int!, $resume: Upload!) {\n    uploadResume(candidateId: $candidateId, resume: $resume) {\n      __typename\n      resumeUrl\n    }\n  }\n"];
export function graphql(source: "\n  mutation RemoveResume($candidateId: Int!, $key: String!) {\n    removeResume(candidateId: $candidateId, key: $key) {\n      __typename\n      resumeUrl\n    }\n  }\n"): (typeof documents)["\n  mutation RemoveResume($candidateId: Int!, $key: String!) {\n    removeResume(candidateId: $candidateId, key: $key) {\n      __typename\n      resumeUrl\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreateCompany($createCompanyInput: CreateCompanyInput!) {\n    createCompany(createCompanyInput: $createCompanyInput) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  mutation CreateCompany($createCompanyInput: CreateCompanyInput!) {\n    createCompany(createCompanyInput: $createCompanyInput) {\n      id\n      name\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreateHiringStep(\n    $createHiringStepInput: CreateHiringStepInput!\n    $positionId: Int!\n  ) {\n    createHiringStep(\n      createHiringStepInput: $createHiringStepInput\n      positionId: $positionId\n    ) {\n      id\n      title\n    }\n  }\n"): (typeof documents)["\n  mutation CreateHiringStep(\n    $createHiringStepInput: CreateHiringStepInput!\n    $positionId: Int!\n  ) {\n    createHiringStep(\n      createHiringStepInput: $createHiringStepInput\n      positionId: $positionId\n    ) {\n      id\n      title\n    }\n  }\n"];
export function graphql(source: "\n  mutation UpdateHiringStep(\n    $id: Int!\n    $positionId: Int!\n    $updateHiringStepInput: UpdateHiringStepInput!\n  ) {\n    updateHiringStep(\n      id: $id\n      positionId: $positionId\n      updateHiringStepInput: $updateHiringStepInput\n    ) {\n      id\n      title\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateHiringStep(\n    $id: Int!\n    $positionId: Int!\n    $updateHiringStepInput: UpdateHiringStepInput!\n  ) {\n    updateHiringStep(\n      id: $id\n      positionId: $positionId\n      updateHiringStepInput: $updateHiringStepInput\n    ) {\n      id\n      title\n    }\n  }\n"];
export function graphql(source: "\n  mutation DeleteHiringStep($id: Int!, $positionId: Int!) {\n    deleteHiringStep(id: $id, positionId: $positionId) {\n      __typename\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteHiringStep($id: Int!, $positionId: Int!) {\n    deleteHiringStep(id: $id, positionId: $positionId) {\n      __typename\n    }\n  }\n"];
export function graphql(source: "\n  mutation createInterview(\n    $createInterviewInput: CreateInterviewInput!\n    $applicationId: Int!\n    $positionId: Int!\n  ) {\n    createInterview(\n      createInterviewInput: $createInterviewInput\n      applicationId: $applicationId\n      positionId: $positionId\n    ) {\n      id\n      title\n      meetingLink\n      format\n      candidateId\n      positionId\n      startsAt\n      feedbackId\n    }\n  }\n"): (typeof documents)["\n  mutation createInterview(\n    $createInterviewInput: CreateInterviewInput!\n    $applicationId: Int!\n    $positionId: Int!\n  ) {\n    createInterview(\n      createInterviewInput: $createInterviewInput\n      applicationId: $applicationId\n      positionId: $positionId\n    ) {\n      id\n      title\n      meetingLink\n      format\n      candidateId\n      positionId\n      startsAt\n      feedbackId\n    }\n  }\n"];
export function graphql(source: "\n  mutation updateInterview(\n    $id: Int!\n    $updateInterviewInput: UpdateInterviewInput!\n    $positionId: Int!\n  ) {\n    updateInterview(\n      id: $id\n      updateInterviewInput: $updateInterviewInput\n      positionId: $positionId\n    ) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation updateInterview(\n    $id: Int!\n    $updateInterviewInput: UpdateInterviewInput!\n    $positionId: Int!\n  ) {\n    updateInterview(\n      id: $id\n      updateInterviewInput: $updateInterviewInput\n      positionId: $positionId\n    ) {\n      id\n    }\n  }\n"];
export function graphql(source: "\n  mutation importQuestions(\n    $questionIds: [Int]!\n    $interviewId: Int!\n    $positionId: Int!\n  ) {\n    importQuestions(\n      questionIds: $questionIds\n      interviewId: $interviewId\n      positionId: $positionId\n    ) {\n      __typename\n    }\n  }\n"): (typeof documents)["\n  mutation importQuestions(\n    $questionIds: [Int]!\n    $interviewId: Int!\n    $positionId: Int!\n  ) {\n    importQuestions(\n      questionIds: $questionIds\n      interviewId: $interviewId\n      positionId: $positionId\n    ) {\n      __typename\n    }\n  }\n"];
export function graphql(source: "\n  mutation declineInterview(\n    $id: Int!\n    $declineInterviewInput: DeclineInterviewInput!\n    $positionId: Int!\n  ) {\n    declineInterview(\n      id: $id\n      declineInterviewInput: $declineInterviewInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"): (typeof documents)["\n  mutation declineInterview(\n    $id: Int!\n    $declineInterviewInput: DeclineInterviewInput!\n    $positionId: Int!\n  ) {\n    declineInterview(\n      id: $id\n      declineInterviewInput: $declineInterviewInput\n      positionId: $positionId\n    ) {\n      status\n    }\n  }\n"];
export function graphql(source: "\n  mutation SetNotificationRead($id: Int!, $recipientId: Int!) {\n    setNotificationRead(id: $id, recipientId: $recipientId) {\n      id\n      isRead\n    }\n  }\n"): (typeof documents)["\n  mutation SetNotificationRead($id: Int!, $recipientId: Int!) {\n    setNotificationRead(id: $id, recipientId: $recipientId) {\n      id\n      isRead\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreatePosition($createPositionInput: CreatePositionInput!) {\n    createPosition(createPositionInput: $createPositionInput) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  mutation CreatePosition($createPositionInput: CreatePositionInput!) {\n    createPosition(createPositionInput: $createPositionInput) {\n      title\n      description\n    }\n  }\n"];
export function graphql(source: "\n  mutation UpdatePosition(\n    $id: Int!\n    $updatePositionInput: UpdatePositionInput!\n  ) {\n    updatePosition(id: $id, updatePositionInput: $updatePositionInput) {\n      title\n      description\n    }\n  }\n"): (typeof documents)["\n  mutation UpdatePosition(\n    $id: Int!\n    $updatePositionInput: UpdatePositionInput!\n  ) {\n    updatePosition(id: $id, updatePositionInput: $updatePositionInput) {\n      title\n      description\n    }\n  }\n"];
export function graphql(source: "\n  mutation PublishPosition($id: Int!) {\n    publishPosition(id: $id) {\n      id\n      title\n      isPublished\n    }\n  }\n"): (typeof documents)["\n  mutation PublishPosition($id: Int!) {\n    publishPosition(id: $id) {\n      id\n      title\n      isPublished\n    }\n  }\n"];
export function graphql(source: "\n  mutation ApplyPosition($applyToPositionInput: ApplyToPositionInput!) {\n    applyToPosition(applyToPositionInput: $applyToPositionInput) {\n      timeslots {\n        id\n        startsAt\n        endsAt\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation ApplyPosition($applyToPositionInput: ApplyToPositionInput!) {\n    applyToPosition(applyToPositionInput: $applyToPositionInput) {\n      timeslots {\n        id\n        startsAt\n        endsAt\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation AddSkillToPosition($id: Int!, $skillName: String!) {\n    addSkillToPosition(id: $id, skillName: $skillName) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation AddSkillToPosition($id: Int!, $skillName: String!) {\n    addSkillToPosition(id: $id, skillName: $skillName) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation RemoveSkillFromPosition($id: Int!, $skillId: Int!) {\n    removeSkillFromPosition(id: $id, skillId: $skillId) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation RemoveSkillFromPosition($id: Int!, $skillId: Int!) {\n    removeSkillFromPosition(id: $id, skillId: $skillId) {\n      requiredSkills {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreateQuestion($createQuestionInput: CreateQuestionInput!) {\n    createQuestion(createQuestionInput: $createQuestionInput) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation CreateQuestion($createQuestionInput: CreateQuestionInput!) {\n    createQuestion(createQuestionInput: $createQuestionInput) {\n      id\n    }\n  }\n"];
export function graphql(source: "\n  mutation UpdateQuestion(\n    $id: Int!\n    $updateQuestionInput: UpdateQuestionInput!\n  ) {\n    updateQuestion(id: $id, updateQuestionInput: $updateQuestionInput) {\n      id\n      title\n      points\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateQuestion(\n    $id: Int!\n    $updateQuestionInput: UpdateQuestionInput!\n  ) {\n    updateQuestion(id: $id, updateQuestionInput: $updateQuestionInput) {\n      id\n      title\n      points\n    }\n  }\n"];
export function graphql(source: "\n  mutation RemoveQuestions($ids: [Int!]!) {\n    removeQuestions(ids: $ids) {\n      __typename\n    }\n  }\n"): (typeof documents)["\n  mutation RemoveQuestions($ids: [Int!]!) {\n    removeQuestions(ids: $ids) {\n      __typename\n    }\n  }\n"];
export function graphql(source: "\n  mutation CreateTimeslot(\n    $createTimeslotInput: CreateTimeslotInput!\n    $candidateId: Int!\n    $applicationId: Int!\n  ) {\n    createTimeslot(\n      createTimeslotInput: $createTimeslotInput\n      candidateId: $candidateId\n      applicationId: $applicationId\n    ) {\n      id\n    }\n  }\n"): (typeof documents)["\n  mutation CreateTimeslot(\n    $createTimeslotInput: CreateTimeslotInput!\n    $candidateId: Int!\n    $applicationId: Int!\n  ) {\n    createTimeslot(\n      createTimeslotInput: $createTimeslotInput\n      candidateId: $candidateId\n      applicationId: $applicationId\n    ) {\n      id\n    }\n  }\n"];
export function graphql(source: "\n  mutation DeleteTimeslot($id: Int!, $candidateId: Int!) {\n    deleteTimeslot(id: $id, candidateId: $candidateId) {\n      __typename\n    }\n  }\n"): (typeof documents)["\n  mutation DeleteTimeslot($id: Int!, $candidateId: Int!) {\n    deleteTimeslot(id: $id, candidateId: $candidateId) {\n      __typename\n    }\n  }\n"];
export function graphql(source: "\n  mutation UpdateUser($id: Int!, $updateUserInput: UpdateUserInput!) {\n    updateUser(id: $id, updateUserInput: $updateUserInput) {\n      __typename\n    }\n  }\n"): (typeof documents)["\n  mutation UpdateUser($id: Int!, $updateUserInput: UpdateUserInput!) {\n    updateUser(id: $id, updateUserInput: $updateUserInput) {\n      __typename\n    }\n  }\n"];
export function graphql(source: "\n  query GetApplication($uuid: String!, $candidateId: Int) {\n    getApplication(uuid: $uuid, candidateId: $candidateId) {\n      id\n      uuid\n      status\n      declineMessage\n      currentStep {\n        id\n        title\n        order\n      }\n      upcomingInterview {\n        id\n        uuid\n        title\n        description\n        format\n        meetingLink\n        startsAt\n        endsAt\n        status\n        questions {\n          id\n          title\n          points\n        }\n      }\n      position {\n        id\n        uuid\n        title\n        salaryRateType\n        salaryRate\n        type\n        description\n        requiredSkills {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        hiringSteps {\n          id\n          title\n          order\n        }\n      }\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        userId\n        skills {\n          id\n          name\n        }\n        user {\n          firstname\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetApplication($uuid: String!, $candidateId: Int) {\n    getApplication(uuid: $uuid, candidateId: $candidateId) {\n      id\n      uuid\n      status\n      declineMessage\n      currentStep {\n        id\n        title\n        order\n      }\n      upcomingInterview {\n        id\n        uuid\n        title\n        description\n        format\n        meetingLink\n        startsAt\n        endsAt\n        status\n        questions {\n          id\n          title\n          points\n        }\n      }\n      position {\n        id\n        uuid\n        title\n        salaryRateType\n        salaryRate\n        type\n        description\n        requiredSkills {\n          id\n          name\n        }\n        company {\n          id\n          name\n        }\n        hiringSteps {\n          id\n          title\n          order\n        }\n      }\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        userId\n        skills {\n          id\n          name\n        }\n        user {\n          firstname\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetApplications($candidateId: Int!) {\n    getApplications(candidateId: $candidateId) {\n      id\n      uuid\n      status\n      position {\n        id\n        title\n        company {\n          id\n          name\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetApplications($candidateId: Int!) {\n    getApplications(candidateId: $candidateId) {\n      id\n      uuid\n      status\n      position {\n        id\n        title\n        company {\n          id\n          name\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query Refresh {\n    refresh {\n      accessToken\n      expSeconds\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query Refresh {\n    refresh {\n      accessToken\n      expSeconds\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetCandidateProfile($uuid: String!) {\n    getCandidateProfile(uuid: $uuid) {\n      id\n      uuid\n      positionTitle\n      yearsOfExperience\n      salaryExpectation\n      salaryRateType\n      about\n      resumeUrl\n      skills {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetCandidateProfile($uuid: String!) {\n    getCandidateProfile(uuid: $uuid) {\n      id\n      uuid\n      positionTitle\n      yearsOfExperience\n      salaryExpectation\n      salaryRateType\n      about\n      resumeUrl\n      skills {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetProposalStatus($uuid: String!, $positionUuid: String!) {\n    getProposalStatus(uuid: $uuid, positionUuid: $positionUuid)\n  }\n"): (typeof documents)["\n  query GetProposalStatus($uuid: String!, $positionUuid: String!) {\n    getProposalStatus(uuid: $uuid, positionUuid: $positionUuid)\n  }\n"];
export function graphql(source: "\n  query SearchCompanies($query: String!) {\n    searchCompanies(query: $query) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  query SearchCompanies($query: String!) {\n    searchCompanies(query: $query) {\n      id\n      name\n    }\n  }\n"];
export function graphql(source: "\n  query GetInterviews($getInterviewsWhereInput: GetInterviewsWhereInput!) {\n    getInterviews(getInterviewsWhereInput: $getInterviewsWhereInput) {\n      id\n      uuid\n      title\n      description\n      meetingLink\n      startsAt\n      endsAt\n      status\n      hiringStepId\n      applicationId\n      positionId\n    }\n  }\n"): (typeof documents)["\n  query GetInterviews($getInterviewsWhereInput: GetInterviewsWhereInput!) {\n    getInterviews(getInterviewsWhereInput: $getInterviewsWhereInput) {\n      id\n      uuid\n      title\n      description\n      meetingLink\n      startsAt\n      endsAt\n      status\n      hiringStepId\n      applicationId\n      positionId\n    }\n  }\n"];
export function graphql(source: "\n  query GetInterview($uuid: String!) {\n    getInterview(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      format\n      meetingLink\n      startsAt\n      endsAt\n      status\n      candidateId\n      positionId\n      recruiterId\n      declineReason\n      declinedBy\n      hiringStepId\n      application {\n        uuid\n        candidate {\n          uuid\n        }\n      }\n      questions {\n        id\n        title\n        points\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetInterview($uuid: String!) {\n    getInterview(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      format\n      meetingLink\n      startsAt\n      endsAt\n      status\n      candidateId\n      positionId\n      recruiterId\n      declineReason\n      declinedBy\n      hiringStepId\n      application {\n        uuid\n        candidate {\n          uuid\n        }\n      }\n      questions {\n        id\n        title\n        points\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetNotifications($where: NotificationWhereUniqueInput!) {\n    getNotifications(where: $where) {\n      id\n      title\n      body\n      isRead\n      redirectPath\n      recipientId\n    }\n  }\n"): (typeof documents)["\n  query GetNotifications($where: NotificationWhereUniqueInput!) {\n    getNotifications(where: $where) {\n      id\n      title\n      body\n      isRead\n      redirectPath\n      recipientId\n    }\n  }\n"];
export function graphql(source: "\n  query getPosition($uuid: String!) {\n    getPosition(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      authorId\n      hiringSteps {\n        id\n        title\n        positionId\n      }\n      requiredSkills {\n        id\n        name\n      }\n      company {\n        id\n        name\n      }\n      suggestedCandidates {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n      }\n      applications {\n        id\n        uuid\n        status\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n        }\n        interviews {\n          uuid\n        }\n      }\n      applicationStatus\n    }\n  }\n"): (typeof documents)["\n  query getPosition($uuid: String!) {\n    getPosition(uuid: $uuid) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      authorId\n      hiringSteps {\n        id\n        title\n        positionId\n      }\n      requiredSkills {\n        id\n        name\n      }\n      company {\n        id\n        name\n      }\n      suggestedCandidates {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n      }\n      applications {\n        id\n        uuid\n        status\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n        }\n        interviews {\n          uuid\n        }\n      }\n      applicationStatus\n    }\n  }\n"];
export function graphql(source: "\n  query GetPositions($where: PositionWhereInput!) {\n    getAllPositions(where: $where) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      company {\n        id\n        name\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetPositions($where: PositionWhereInput!) {\n    getAllPositions(where: $where) {\n      id\n      uuid\n      title\n      description\n      type\n      isRemoteWorldWide\n      location\n      isPublished\n      salaryRate\n      salaryRateType\n      company {\n        id\n        name\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetQuestions($recruiterId: Int!) {\n    getQuestions(recruiterId: $recruiterId) {\n      id\n      title\n      points\n    }\n  }\n"): (typeof documents)["\n  query GetQuestions($recruiterId: Int!) {\n    getQuestions(recruiterId: $recruiterId) {\n      id\n      title\n      points\n    }\n  }\n"];
export function graphql(source: "\n  query SearchSkills($query: String!) {\n    searchSkills(query: $query) {\n      id\n      name\n    }\n  }\n"): (typeof documents)["\n  query SearchSkills($query: String!) {\n    searchSkills(query: $query) {\n      id\n      name\n    }\n  }\n"];
export function graphql(source: "\n  query getCalendarDayTimeslots($where: TimeslotsWhereInput!) {\n    getCalendarDayTimeslots(where: $where) {\n      id\n      startsAt\n      endsAt\n    }\n  }\n"): (typeof documents)["\n  query getCalendarDayTimeslots($where: TimeslotsWhereInput!) {\n    getCalendarDayTimeslots(where: $where) {\n      id\n      startsAt\n      endsAt\n    }\n  }\n"];
export function graphql(source: "\n  query GetUsers {\n    getAllUsers {\n      firstname\n      type\n    }\n  }\n"): (typeof documents)["\n  query GetUsers {\n    getAllUsers {\n      firstname\n      type\n    }\n  }\n"];
export function graphql(source: "\n  query GetCurrentUser {\n    getCurrentUser {\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetCurrentUser {\n    getCurrentUser {\n      user {\n        id\n        firstname\n        lastname\n        email\n        type\n        candidateId\n        recruiterId\n        candidate {\n          id\n          uuid\n          positionTitle\n          yearsOfExperience\n          salaryExpectation\n          salaryRateType\n          about\n        }\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query GetUserProfile {\n    getUserProfile {\n      id\n      firstname\n      middlename\n      lastname\n      email\n      type\n      candidateId\n      recruiterId\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        resumeUrl\n        skills {\n          id\n          name\n        }\n      }\n      recruiter {\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  query GetUserProfile {\n    getUserProfile {\n      id\n      firstname\n      middlename\n      lastname\n      email\n      type\n      candidateId\n      recruiterId\n      candidate {\n        id\n        uuid\n        positionTitle\n        yearsOfExperience\n        salaryExpectation\n        salaryRateType\n        about\n        resumeUrl\n        skills {\n          id\n          name\n        }\n      }\n      recruiter {\n        id\n      }\n    }\n  }\n"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;